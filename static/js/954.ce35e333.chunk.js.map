{"version":3,"file":"static/js/954.ce35e333.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/App/App.styled.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(2)};\n  width: 400px;\n  margin-bottom: ${p => p.theme.spacing(8)};\n`;\n\nexport const FormField = styled(Field)`\n  padding: ${p => p.theme.spacing(1)} ${p => p.theme.spacing(3)};\n  border: 1px solid ${p => p.theme.colors.purple};\n  border-radius: ${p => p.theme.radii.m};\n  font-size: 18px;\n  font-weight: 400;\n`;\n\nexport const FormLabel = styled.label`\n  text-align: start;\n  font-size: 16px;\n  font-weight: 500;\n  color: ${p => p.theme.colors.black};\n`;\n\nexport const FormButton = styled.button`\n  width: 144px;\n  padding: ${p => p.theme.spacing(2)};\n  margin-top: ${p => p.theme.spacing(6)};\n  background-color: ${p => p.theme.colors.green};\n  color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.l};\n  border: 4px solid ${p => p.theme.colors.green};\n  font-size: 18px;\n  font-weight: 400;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    font-weight 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border: 4px solid ${p => p.theme.colors.darkGreen};\n    color: ${p => p.theme.colors.darkGreen};\n    font-weight: 600;\n  }\n`;\n\nexport const FormError = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.red};\n  font-size: 16px;\n  font-weight: 500;\n  margin-right: auto;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const AppWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin: ${p => p.theme.spacing(6)} auto;\n  padding: ${p => p.theme.spacing(6)};\n  background-color: ${p => p.theme.colors.light};\n  border-radius: ${p => p.theme.radii.l};\n  width: 600px;\n  border: 1px solid ${p => p.theme.colors.purple};\n  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3);\n`;\n\nexport const MainTitle = styled.h1`\n  color: ${p => p.theme.colors.black};\n  margin-bottom: ${p => p.theme.spacing(6)};\n  font-size: 40px;\n`;\n\nexport const ContactsTitle = styled.h2`\n  color: ${p => p.theme.colors.black};\n  margin-bottom: ${p => p.theme.spacing(2)};\n  font-size: 32px;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport {\n  FormStyle,\n  FormButton,\n  FormError,\n  FormField,\n  FormLabel,\n} from './ContactForm.styled';\nimport toast from 'react-hot-toast';\n\nconst validation = Yup.object().shape({\n  name: Yup.string().required('Required'),\n  number: Yup.string()\n    .matches(/^\\d{3}-\\d{2}-\\d{2}$/g, 'Number format: xxx-xx-xx')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={validation}\n      onSubmit={(values, actions) => {\n        const isAdded = contacts.some(\n          contact => contact.name.toLowerCase() === values.name.toLowerCase()\n        );\n        if (isAdded) {\n          actions.resetForm();\n          return toast.error(`${values.name} is already in your contacts.`);\n        }\n        dispatch(addContact(values));\n        actions.resetForm();\n      }}\n    >\n      <FormStyle>\n        <FormLabel htmlFor=\"name\">Name</FormLabel>\n        <FormField\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          required\n          autoComplete=\"on\"\n        ></FormField>\n        <FormError name=\"name\" component=\"span\" />\n\n        <FormLabel htmlFor=\"number\">Number</FormLabel>\n        <FormField\n          type=\"tel\"\n          name=\"number\"\n          id=\"number\"\n          placeholder=\"xxx-xx-xx\"\n          required\n          autoComplete=\"on\"\n        ></FormField>\n        <FormError name=\"number\" component=\"span\" />\n\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </FormStyle>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 400px;\n  margin-left: ${p => p.theme.spacing(4)};\n  margin-top: ${p => p.theme.spacing(3)};\n`;\n\nexport const ContactName = styled.p`\n  color: ${p => p.theme.colors.black};\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const DeleteBtn = styled.button`\n  padding: ${p => p.theme.spacing(1.5)};\n  background-color: ${p => p.theme.colors.purple};\n  color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.m};\n  border: none;\n  font-size: 16px;\n  font-weight: 400;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    font-weight 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.red};\n    font-weight: 600;\n  }\n`;\n","import { ContactName, StyledItem, DeleteBtn } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const ContactItem = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <StyledItem>\n      <ContactName>\n        {name}: {number}\n      </ContactName>\n      <DeleteBtn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </DeleteBtn>\n    </StyledItem>\n  );\n};\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {visibleContacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} />\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterTitle = styled.h3`\n  margin-bottom: ${p => p.theme.spacing(2)};\n  color: ${p => p.theme.colors.black};\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FilterInput = styled.input`\n  width: 400px;\n  padding: ${p => p.theme.spacing(1)};\n  border: 1px solid ${p => p.theme.colors.blue};\n  border-radius: ${p => p.theme.radii.m};\n  font-size: 18px;\n  font-weight: 400;\n`;\n","import { FilterInput, FilterTitle } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { changeFilter } from '../../redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <FilterTitle>Find contacts by name</FilterTitle>\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        id=\"filter\"\n        onChange={event => dispatch(changeFilter(event.target.value))}\n        required\n      />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { LoaderWrap } from './Loader.styled';\nimport { Triangle } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrap>\n      <Triangle\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        color=\"#320D51\"\n        ariaLabel=\"triangle-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n      />\n    </LoaderWrap>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { AppWrap, MainTitle, ContactsTitle } from 'components/App/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { Helmet } from 'react-helmet-async';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading && !error && <Loader />}\n      <Helmet>\n        <title>Your contactss</title>\n      </Helmet>\n      <AppWrap>\n        <MainTitle>Phonebook</MainTitle>\n        <ContactForm />\n        <ContactsTitle>Contacts</ContactsTitle>\n        <Filter />\n        <ContactsList />\n      </AppWrap>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormStyle","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","spacing","FormField","Field","_templateObject2","colors","purple","radii","m","FormLabel","_templateObject3","black","FormButton","_templateObject4","green","white","l","darkGreen","FormError","ErrorMessage","_templateObject5","red","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","trim","AppWrap","light","MainTitle","ContactsTitle","validation","Yup","shape","required","number","matches","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","some","resetForm","toast","concat","addContact","children","_jsxs","htmlFor","type","id","autoComplete","component","placeholder","StyledItem","ContactName","DeleteBtn","ContactItem","_ref","onClick","deleteContact","ContactsList","visibleContacts","map","FilterTitle","FilterInput","blue","Filter","value","onChange","event","changeFilter","target","LoaderWrap","Loader","Triangle","visible","height","width","color","ariaLabel","wrapperStyle","wrapperClass","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}