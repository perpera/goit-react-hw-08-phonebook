{"version":3,"file":"static/js/960.c787fcaf.chunk.js","mappings":"8NAGO,MAAMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4GAG5BC,GAAKA,EAAEC,MAAMC,QAAQ,KAEXF,GAAKA,EAAEC,MAAMC,QAAQ,KAG3BC,GAAYP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAaS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yHACzBC,GAAKA,EAAEC,MAAMC,QAAQ,KAAMF,GAAKA,EAAEC,MAAMC,QAAQ,KACvCF,GAAKA,EAAEC,MAAMK,OAAOC,SACvBP,GAAKA,EAAEC,MAAMO,MAAMC,IAKzBC,EAAYd,EAAAA,GAAAA,MAAYe,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,wFAI1BC,GAAKA,EAAEC,MAAMK,OAAOM,QAGlBC,EAAajB,EAAAA,GAAAA,OAAakB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,qcAE1BC,GAAKA,EAAEC,MAAMC,QAAQ,KAClBF,GAAKA,EAAEC,MAAMC,QAAQ,KACfF,GAAKA,EAAEC,MAAMK,OAAOS,QAC/Bf,GAAKA,EAAEC,MAAMK,OAAOU,QACZhB,GAAKA,EAAEC,MAAMO,MAAMS,IAChBjB,GAAKA,EAAEC,MAAMK,OAAOS,QASlBf,GAAKA,EAAEC,MAAMK,OAAOY,YAC/BlB,GAAKA,EAAEC,MAAMK,OAAOY,YAKpBC,GAAYvB,EAAAA,EAAAA,IAAOwB,EAAAA,GAAPxB,CAAoByB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,yFAClCC,GAAKA,EAAEC,MAAMK,OAAOgB,K,sGCrC/B,MAAMC,EAAaC,EAAAA,KAAaC,MAAM,CACpCC,MAAOF,EAAAA,KACJE,MAAM,yBACNC,SAAS,sBACZC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,0CACPC,IAAI,GAAI,wBACRH,SAAS,2BAGDI,EAAYA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbV,MAAO,GACPE,SAAU,IAEZS,iBAAkBd,EAClBe,SAAUA,CAACC,EAAQC,KACjBR,GAASS,EAAAA,EAAAA,IAAMF,IACfC,EAAQE,WAAW,EACnBC,UAEFC,EAAAA,EAAAA,MAACjD,EAAAA,EAAS,CAAAgD,SAAA,EACRT,EAAAA,EAAAA,KAACxB,EAAAA,GAAS,CAACmC,QAAQ,QAAOF,SAAC,WAC3BT,EAAAA,EAAAA,KAAC/B,EAAAA,GAAS,CACR2C,KAAK,QACLC,KAAK,QACLC,GAAG,QACHC,aAAa,KACbC,YAAY,MAEdhB,EAAAA,EAAAA,KAACf,EAAAA,GAAS,CAAC4B,KAAK,QAAQI,UAAU,SAElCjB,EAAAA,EAAAA,KAACxB,EAAAA,GAAS,CAACmC,QAAQ,WAAUF,SAAC,cAC9BT,EAAAA,EAAAA,KAAC/B,EAAAA,GAAS,CACR2C,KAAK,WACLC,KAAK,WACLC,GAAG,WACHC,aAAa,KACbC,YAAY,MAEdhB,EAAAA,EAAAA,KAACf,EAAAA,GAAS,CAAC4B,KAAK,WAAWI,UAAU,SAErCjB,EAAAA,EAAAA,KAACrB,EAAAA,GAAU,CAACiC,KAAK,SAAQH,SAAC,eAErB,E,YCzDb,MAWA,EAXcS,KAEVR,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACET,EAAAA,EAAAA,KAACmB,EAAAA,GAAM,CAAAV,UACLT,EAAAA,EAAAA,KAAA,SAAAS,SAAO,aAETT,EAAAA,EAAAA,KAACH,EAAS,M","sources":["components/ContactForm/ContactForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(2)};\n  width: 400px;\n  margin-bottom: ${p => p.theme.spacing(8)};\n`;\n\nexport const FormField = styled(Field)`\n  padding: ${p => p.theme.spacing(1)} ${p => p.theme.spacing(3)};\n  border: 1px solid ${p => p.theme.colors.purple};\n  border-radius: ${p => p.theme.radii.m};\n  font-size: 18px;\n  font-weight: 400;\n`;\n\nexport const FormLabel = styled.label`\n  text-align: start;\n  font-size: 16px;\n  font-weight: 500;\n  color: ${p => p.theme.colors.black};\n`;\n\nexport const FormButton = styled.button`\n  width: 144px;\n  padding: ${p => p.theme.spacing(2)};\n  margin-top: ${p => p.theme.spacing(6)};\n  background-color: ${p => p.theme.colors.green};\n  color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.l};\n  border: 4px solid ${p => p.theme.colors.green};\n  font-size: 18px;\n  font-weight: 400;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    font-weight 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border: 4px solid ${p => p.theme.colors.darkGreen};\n    color: ${p => p.theme.colors.darkGreen};\n    font-weight: 600;\n  }\n`;\n\nexport const FormError = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.red};\n  font-size: 16px;\n  font-weight: 500;\n  margin-right: auto;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/authorization/operations';\nimport {\n  FormStyle,\n  FormField,\n  FormButton,\n  FormLabel,\n  FormError,\n} from 'components/ContactForm/ContactForm.styled';\n\nconst validation = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required!'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .max(20, 'Password is too long')\n    .required('Password is required!'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={validation}\n      onSubmit={(values, actions) => {\n        dispatch(logIn(values));\n        actions.resetForm();\n      }}\n    >\n      <FormStyle>\n        <FormLabel htmlFor=\"email\">Email</FormLabel>\n        <FormField\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          autoComplete=\"on\"\n          placeholder=\"\"\n        />\n        <FormError name=\"email\" component=\"div\" />\n\n        <FormLabel htmlFor=\"password\">Password</FormLabel>\n        <FormField\n          type=\"password\"\n          name=\"password\"\n          id=\"password\"\n          autoComplete=\"on\"\n          placeholder=\"\"\n        />\n        <FormError name=\"password\" component=\"div\" />\n\n        <FormButton type=\"submit\">Log in</FormButton>\n      </FormStyle>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Helmet } from 'react-helmet-async';\n\nconst Login = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["FormStyle","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","spacing","FormField","Field","_templateObject2","colors","purple","radii","m","FormLabel","_templateObject3","black","FormButton","_templateObject4","green","white","l","darkGreen","FormError","ErrorMessage","_templateObject5","red","validation","Yup","shape","email","required","password","min","max","LoginForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","children","_jsxs","htmlFor","type","name","id","autoComplete","placeholder","component","Login","Helmet"],"sourceRoot":""}